
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BC33B507B2630CDA9B35D3C69DB23D2C'
    
_lr_action_items = {'$end':([1,2,3,4,6,13,14,15,16,17,18,],[0,-10,-1,-9,-8,-7,-6,-3,-5,-4,-2,]),'STRING':([0,5,7,8,9,10,11,],[2,2,2,2,2,2,2,]),'*':([2,3,4,6,12,13,14,15,16,17,18,],[-10,10,-9,-8,10,-7,-6,10,-5,10,-2,]),')':([2,4,6,12,13,14,15,16,17,18,],[-10,-9,-8,18,-7,-6,-3,-5,-4,-2,]),'/':([2,3,4,6,12,13,14,15,16,17,18,],[-10,8,-9,-8,8,-7,-6,8,-5,8,-2,]),'FLOAT':([0,5,7,8,9,10,11,],[4,4,4,4,4,4,4,]),'(':([0,5,7,8,9,10,11,],[5,5,5,5,5,5,5,]),'+':([2,3,4,6,12,13,14,15,16,17,18,],[-10,9,-9,-8,9,-7,-6,-3,-5,-4,-2,]),'INTEGER':([0,5,7,8,9,10,11,],[6,6,6,6,6,6,6,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[7,-10,11,-9,7,-8,7,7,7,7,7,11,-7,-6,-3,-5,-4,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,5,7,8,9,10,11,],[3,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','CalculadorBasico.py',60),
  ('expression -> ( expression )','expression',3,'p_expression_group','CalculadoraSencilla.py',65),
  ('expression -> expression + expression','expression',3,'p_expression_op','CalculadoraSencilla.py',70),
  ('expression -> expression - expression','expression',3,'p_expression_op','CalculadoraSencilla.py',71),
  ('expression -> expression * expression','expression',3,'p_expression_op','CalculadoraSencilla.py',72),
  ('expression -> expression / expression','expression',3,'p_expression_op','CalculadoraSencilla.py',73),
  ('expression -> - expression','expression',2,'p_expression_uminus','CalculadoraSencilla.py',80),
  ('expression -> INTEGER','expression',1,'p_expression_number','CalculadoraSencilla.py',84),
  ('expression -> FLOAT','expression',1,'p_expression_number','CalculadoraSencilla.py',85),
  ('expression -> STRING','expression',1,'p_expression_string','CalculadoraSencilla.py',90),
]
